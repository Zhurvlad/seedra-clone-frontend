import Head from 'next/head'
import {Content} from "../components/Conten";
import {GetServerSideProps, NextPage} from "next";
import {IDataDto} from "../utils/api/types";
import {wrapper} from "../redux/store";
import {setItems, setMeta} from '../redux/itemsSlice';
import {Api} from '../utils/api';
import {setUserData} from '../redux/userSlice';
import {setCart} from '../redux/cartSlice';
import {withLayout} from "../layout/Layout";

interface HomeProps {
    items: IDataDto,
    userCart: null
}

const Home: NextPage<HomeProps> = ({items, userCart}): JSX.Element => {

    console.log(userCart)

    return (
        <div>
            <Head>
                <title>Seedra</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/headerIcon/tabLogo.svg"/>
                <link rel="preconnect" href="https://fonts.googleapis.com"/>
                <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin={''}/>
                <link
                    href="https://fonts.googleapis.com/css2?family=Lexend:wght@300;400;500;600;700;900&display=swap"
                    rel="stylesheet"/>
            </Head>


            <div>
                <Content meta={items?.meta} items={items?.items}/>
            </div>
        </div>

    )
}


export const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(store => async (ctx) => {

    try {

        const items = await Api().items.getAll()

        const userData = await Api(ctx).user.getMe()
        const userCart = await Api(ctx).cart.getUserCart()


        store.dispatch(setCart(userCart))
        store.dispatch(setUserData(userData))
        store.dispatch(setItems(items.items))
        store.dispatch(setMeta(items.meta))

        return {
            props: {
                items,
                userData,
                userCart
            }
        }
    } catch (e) {
        console.log(e)
    }
    return {
        props: {
            items: null
        }
    }

})


export default withLayout(Home)